name: Website Landing Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
defaults:
  run:
    working-directory: ./apps/landing
on:
  push:
    branches: [production, development, 'feature*', 'bugfix*', 'hotfix*', 'test*']
    paths:
      - 'apps/**'
      - '!apps/app/**'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'
      - name: Output information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Cypress install
        uses: cypress-io/github-action@v6
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: .next
          if-no-files-found: error
          path: apps/landing/.next
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: .next
          path: apps/landing/.next
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          project: ./apps/landing
          start: npm --prefix ./apps/landing start
          browser: chrome
  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        id: build-website
        run: npm run build
  report:
    needs: [lint, deploy-production, deploy-preview]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
